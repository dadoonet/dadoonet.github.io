<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>plugin for elasticsearch v5 on David Pilato</title><link>https://david.pilato.fr/series/plugin-for-elasticsearch-v5/</link><description>Recent content in plugin for elasticsearch v5 on David Pilato</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2022, David Pilato, France</copyright><lastBuildDate>Wed, 03 Aug 2016 18:24:37 +0200</lastBuildDate><atom:link href="https://david.pilato.fr/series/plugin-for-elasticsearch-v5/index.xml" rel="self" type="application/rss+xml"/><item><title>Elasticsearch real integration tests with security enabled</title><link>https://david.pilato.fr/blog/2016-08-03-elasticsearch-real-integration-tests-with-security-enabled/</link><pubDate>Wed, 03 Aug 2016 18:24:37 +0200</pubDate><guid>https://david.pilato.fr/blog/2016-08-03-elasticsearch-real-integration-tests-with-security-enabled/</guid><description>In a recent post we have seen how to create real integration tests. Those tests launch a real elasticsearch cluster, then run some tests you write with JUnit or your favorite test framework then stop the cluster.
But sometimes, you may want to add existing plugins in your integration test cluster.
For example, you might want to use X-Pack to bring fantastic features such as:
Security Alerting Monitoring Graph Reporting Let&amp;rsquo;s see how you can do that with Maven and Ant again&amp;hellip;</description></item><item><title>Creating Elasticsearch Transport Action</title><link>https://david.pilato.fr/blog/2016-08-01-creating-elasticsearch-transport-action/</link><pubDate>Mon, 01 Aug 2016 17:33:29 +0200</pubDate><guid>https://david.pilato.fr/blog/2016-08-01-creating-elasticsearch-transport-action/</guid><description>This blog post is part of a series which will teach you:
How to write a plugin for elasticsearch 5.0 using Maven. How to add a new REST endpoint plugin to elasticsearch 5.0. How to use Transport Action classes (what you are reading now). How I wrote the ingest-bano plugin which will be hopefully released soonish. In this plugin, new REST endpoints have been added. In the previous article, we discovered how to add a REST plugin.</description></item><item><title>Adding a new REST endpoint to elasticsearch</title><link>https://david.pilato.fr/blog/2016-07-30-adding-a-new-rest-endpoint-to-elasticsearch/</link><pubDate>Sat, 30 Jul 2016 14:50:00 +0200</pubDate><guid>https://david.pilato.fr/blog/2016-07-30-adding-a-new-rest-endpoint-to-elasticsearch/</guid><description>This blog post is part of a series which will teach you:
How to write a plugin for elasticsearch 5.0 using Maven. How to add a new REST endpoint plugin to elasticsearch 5.0 (what you are reading now). How I wrote the ingest-bano plugin which will be hopefully released soonish. In this plugin, new REST endpoints have been added. Imagine that you wish to add a new REST endpoint so you can send requests like:</description></item><item><title>Elasticsearch real integration tests</title><link>https://david.pilato.fr/blog/2016-07-29-elasticsearch-real-integration-tests/</link><pubDate>Fri, 29 Jul 2016 03:02:48 +0200</pubDate><guid>https://david.pilato.fr/blog/2016-07-29-elasticsearch-real-integration-tests/</guid><description>Integration tests&amp;hellip; How do you run them?
Often, you are tempted to run services you want to test from JUnit for example. In elasticsearch, you can extend ESIntegTestCase class which will start a cluster of a given number of nodes.
public class BanoPluginIntegrationTest extends ESIntegTestCase { public void testPluginIsLoaded() throws Exception { // Your code here } } But to be honest, the test you are running does not guarantee that you will have the same result in production.</description></item><item><title>Creating an Ingest plugin for elasticsearch</title><link>https://david.pilato.fr/blog/2016-07-28-creating-an-ingest-plugin-for-elasticsearch/</link><pubDate>Thu, 28 Jul 2016 10:55:29 +0200</pubDate><guid>https://david.pilato.fr/blog/2016-07-28-creating-an-ingest-plugin-for-elasticsearch/</guid><description>This blog post is part of a series which will teach you:
How to write a plugin for elasticsearch 5.0 using Maven. How to write an ingest plugin for elasticsearch 5.0 (what you are reading now). How I wrote the ingest-bano plugin which will be hopefully released soonish. Today, we will focus on writing an Ingest plugin for elasticsearch.
Hey! Wait! You wrote Ingest? What is that?
Ingest is a new feature coming in elasticsearch 5.</description></item><item><title>Creating a plugin for elasticsearch 5.0 using Maven</title><link>https://david.pilato.fr/blog/2016-07-27-creating-a-plugin-for-elasticsearch-5-dot-0-using-maven/</link><pubDate>Wed, 27 Jul 2016 16:00:27 +0200</pubDate><guid>https://david.pilato.fr/blog/2016-07-27-creating-a-plugin-for-elasticsearch-5-dot-0-using-maven/</guid><description>Elasticsearch 5.0 switched to Gradle in October 2015.
You can obviously write a plugin using Gradle if you wish and you could benefit from all the goodies elasticsearch team wrote when it comes to integration tests and so on.
My colleague, Alexander Reelsen aka Spinscale on Twitter, wrote a super nice template if you wish to create an Ingest plugin for 5.0.
Hey! Wait! You wrote Ingest? What is that?
Ingest is a new feature coming in elasticsearch 5.</description></item></channel></rss>