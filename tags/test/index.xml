<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>test on David Pilato</title><link>https://david.pilato.fr/tags/test/</link><description>Recent content in test on David Pilato</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2022, David Pilato, France</copyright><lastBuildDate>Fri, 21 Oct 2016 18:24:37 +0200</lastBuildDate><atom:link href="https://david.pilato.fr/tags/test/index.xml" rel="self" type="application/rss+xml"/><item><title>Elasticsearch real integration tests with security enabled (Updated for GA)</title><link>https://david.pilato.fr/blog/2016-10-21-elasticsearch-real-integration-tests-with-security-enabled-updated-for-ga/</link><pubDate>Fri, 21 Oct 2016 18:24:37 +0200</pubDate><guid>https://david.pilato.fr/blog/2016-10-21-elasticsearch-real-integration-tests-with-security-enabled-updated-for-ga/</guid><description>NOTE: This article is an updated version of Elasticsearch real integration tests with security enabled
In a recent post we have seen how to create real integration tests. Those tests launch a real elasticsearch cluster, then run some tests you write with JUnit or your favorite test framework then stop the cluster.
But sometimes, you may want to add existing plugins in your integration test cluster.
For example, you might want to use X-Pack to bring fantastic features such as:</description></item><item><title>Elasticsearch real integration tests (Updated for GA)</title><link>https://david.pilato.fr/blog/2016-10-18-elasticsearch-real-integration-tests-updated-for-ga/</link><pubDate>Tue, 18 Oct 2016 03:02:48 +0200</pubDate><guid>https://david.pilato.fr/blog/2016-10-18-elasticsearch-real-integration-tests-updated-for-ga/</guid><description>NOTE: This article is an updated version of Elasticsearch real integration tests
Integration tests&amp;hellip; How do you run them?
Often, you are tempted to run services you want to test from JUnit for example. In elasticsearch, you can extend ESIntegTestCase class which will start a cluster of a given number of nodes.
public class BanoPluginIntegrationTest extends ESIntegTestCase { public void testPluginIsLoaded() throws Exception { // Your code here } } But to be honest, the test you are running does not guarantee that you will have the same result in production.</description></item><item><title>Creating an Ingest plugin for elasticsearch (Updated for GA)</title><link>https://david.pilato.fr/blog/2016-10-17-creating-an-ingest-plugin-for-elasticsearch-updated-for-ga/</link><pubDate>Mon, 17 Oct 2016 10:55:29 +0200</pubDate><guid>https://david.pilato.fr/blog/2016-10-17-creating-an-ingest-plugin-for-elasticsearch-updated-for-ga/</guid><description>NOTE: This article is an updated version of Creating an Ingest plugin for elasticsearch
This blog post is part of a series which will teach you:
How to write a plugin for elasticsearch 5.0 using Maven. How to write an ingest plugin for elasticsearch 5.0 (what you are reading now). How I wrote the ingest-bano plugin which will be hopefully released soonish. Today, we will focus on writing an Ingest plugin for elasticsearch.</description></item><item><title>Elasticsearch real integration tests</title><link>https://david.pilato.fr/blog/2016-07-29-elasticsearch-real-integration-tests/</link><pubDate>Fri, 29 Jul 2016 03:02:48 +0200</pubDate><guid>https://david.pilato.fr/blog/2016-07-29-elasticsearch-real-integration-tests/</guid><description>NOTE: This article is now outdated. Please read Elasticsearch real integration tests (Updated for GA) instead!
Integration tests&amp;hellip; How do you run them?
Often, you are tempted to run services you want to test from JUnit for example. In elasticsearch, you can extend ESIntegTestCase class which will start a cluster of a given number of nodes.
public class BanoPluginIntegrationTest extends ESIntegTestCase { public void testPluginIsLoaded() throws Exception { // Your code here } } But to be honest, the test you are running does not guarantee that you will have the same result in production.</description></item><item><title>Creating an Ingest plugin for elasticsearch</title><link>https://david.pilato.fr/blog/2016-07-28-creating-an-ingest-plugin-for-elasticsearch/</link><pubDate>Thu, 28 Jul 2016 10:55:29 +0200</pubDate><guid>https://david.pilato.fr/blog/2016-07-28-creating-an-ingest-plugin-for-elasticsearch/</guid><description>NOTE: This article is now outdated. Please read Creating an Ingest plugin for elasticsearch (Updated for GA) instead!
This blog post is part of a series which will teach you:
How to write a plugin for elasticsearch 5.0 using Maven. How to write an ingest plugin for elasticsearch 5.0 (what you are reading now). How I wrote the ingest-bano plugin which will be hopefully released soonish. Today, we will focus on writing an Ingest plugin for elasticsearch.</description></item></channel></rss>