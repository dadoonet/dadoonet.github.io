<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>projects on David Pilato</title><link>https://david.pilato.fr/categories/projects/</link><description>Recent content in projects on David Pilato</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2022, David Pilato, France</copyright><lastBuildDate>Fri, 20 Jul 2012 23:38:00 +0200</lastBuildDate><atom:link href="https://david.pilato.fr/categories/projects/index.xml" rel="self" type="application/rss+xml"/><item><title>ScrutMyDocs : un moteur de recherche pour documents</title><link>https://david.pilato.fr/blog/2012-07-20-scrutmydocs-un-moteur-de-recherche-pour-documents/</link><pubDate>Fri, 20 Jul 2012 23:38:00 +0200</pubDate><guid>https://david.pilato.fr/blog/2012-07-20-scrutmydocs-un-moteur-de-recherche-pour-documents/</guid><description>Avec Malloum, nous venons de publier notre premier projet open-source commun: Scrut My Docs !
Technical overview
Nos objectifs Fournir une application web clé en main permettant d’indexer des documents de vos disques locaux. Fournir à la communauté Elasticsearch un modèle de base pour développer votre propre webapp pour une utilisation simple de recherche (« à la google »). Aider les débutants Elasticsearch Java avec des exemples concrets en Java Les technologies employées Elasticsearch !</description></item><item><title>La factory Spring pour Elasticsearch est sortie !</title><link>https://david.pilato.fr/blog/2012-05-25-la-factory-spring-pour-elasticsearch-est-sortie/</link><pubDate>Fri, 25 May 2012 16:45:36 +0000</pubDate><guid>https://david.pilato.fr/blog/2012-05-25-la-factory-spring-pour-elasticsearch-est-sortie/</guid><description>Et voilà, la première release de la factory spring vient d&amp;rsquo;être faite.
Vous pouvez donc maintenant l&amp;rsquo;utiliser dans vos projets Maven :
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;fr.pilato.spring&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-elasticsearch&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;0.0.1&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Le code source est disponible sur github.</description></item><item><title>Une factory Spring pour Elasticsearch</title><link>https://david.pilato.fr/blog/2012-04-02-une-factory-spring-pour-elasticsearch/</link><pubDate>Mon, 02 Apr 2012 20:02:09 +0000</pubDate><guid>https://david.pilato.fr/blog/2012-04-02-une-factory-spring-pour-elasticsearch/</guid><description>Le besoin Il existe dans Hibernate une fonctionnalité que j&amp;rsquo;aime beaucoup : la mise à jour automatique du schéma de la base en fonction des entités manipulées.
Mon besoin est de faire quasiment la même chose avec Elasticsearch. C&amp;rsquo;est à dire que je souhaite pouvoir appliquer un mapping pour un type donné à chaque fois que je démarre mon projet (en l’occurrence une webapp).
En me basant sur le projet développé par Erez Mazor, j&amp;rsquo;ai donc développé unefactory Spring visant à démarrer des clients (voire des noeuds) Elasticsearch.</description></item><item><title>Mon premier plugin elasticsearch : RSS River</title><link>https://david.pilato.fr/blog/2011-09-14-mon-premier-plugin-elasticsearch-rss-river/</link><pubDate>Wed, 14 Sep 2011 21:30:07 +0000</pubDate><guid>https://david.pilato.fr/blog/2011-09-14-mon-premier-plugin-elasticsearch-rss-river/</guid><description>Il existe dans elasticsearch la notion de river (rivière) qui comme son nom le laisse supposer permet de voir s&amp;rsquo;écouler des données depuis une source jusqu&amp;rsquo;à elasticsearch.
Au fur et à mesure que les données arrivent, la rivière les transporte et les envoie à l&amp;rsquo;indexation dans elasticsearch.
En standard, il existe 4 rivières :
CouchDB qui permet d&amp;rsquo;indexer toutes les nouveautés d&amp;rsquo;une base CouchDB. Voir aussi cet article à ce propos. RabbitMQ qui permet de récupérer des documents dans une queue de traitement asynchrone (genre JMS) Twitter qui permet d&amp;rsquo;indexer votre flux de messages twitter par exemple Wikipedia qui permet d&amp;rsquo;indexer toutes les nouveautés de l&amp;rsquo;encyclopédie au fur et à mesure de leurs publications Premiers pas J&amp;rsquo;ai commencé par bidouiller un peu la rivière CouchDB pour y apporter quelques fonctionnalités dont mes collègues avaient besoin :</description></item></channel></rss>